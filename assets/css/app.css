@import "tailwindcss/base";
@import "tailwindcss/components";
@import "tailwindcss/utilities";

/* This file is for your main application CSS */
body {
    margin: 0;
    padding: 0;
    display: flex;
    flex: 1;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    height: 100vh;
    background-color: #f4f4f9;
    overflow: hidden;
}

.solved-image {
    width: 100%; /* Adjust the size as needed */
    height: auto; /* Maintain the aspect ratio */
    opacity: 1; /* Fully visible */
    position: absolute; /* Fixed position to stay in the top-right corner */
    top:0; /* Adjust the distance from the top */
    right: 0; /* Adjust the distance from the right */
    z-index: 0.5; /* Ensure it appears above other elements */
    border: 1px solid #000; /* Optional: Add a border */
    animation: fadeOut 3s forwards;
    object-fit: contain;
}

@keyframes fadeOut {
    0% {
        opacity: 1; /* Fully visible at the start */
    }
    100% {
        opacity: 0; /* Fully transparent at the end */
    }
}


h1 {
    margin: 0 0 4vh;
    font-size: 50px;
    color: #333;
}

.container {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
}

.puzzle-area {
    display: flex;
    flex: 1;
    justify-content: center;
    gap: 20px;
    margin-top: 20px;
}

.puzzle-box {
    width: 550px;
    height: 550px;
    display: flex;
    justify-content: center;
    align-items: center;
    border: 1px solid black;
    position: relative;
}

.grid-line.easy {
    position: relative;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(3, 1fr);
    z-index: 2;
}

.grid-line.medium {
    position: relative;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: repeat(5, 1fr);
    z-index: 2;
}

.grid-line.hard {
    position: relative;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: grid;
    grid-template-columns: repeat(10, 1fr);
    grid-template-rows: repeat(10, 1fr);
    z-index: 2;
}

.grid-line > div {
    /*border: 1px solid #000;*/
    box-sizing: border-box;
    width: 100%;
    height: 100%;
    object-fit: cover;
    position: relative; /* Ensuring that the pieces stay within this boundary */
}

.pieces-container {
    margin: 0 2vw 0 2vw;
    height: 550px;
    width: 20vw;
    /*border: 1px solid black;*/
    display: flex;
    flex-direction: column;
    align-items: center;
    margin: 0 2vw;
    height: 550px; /* Fixed height for container */
    width: 20vw; /* Width of the container */
    background-color: #f8f8f8;
    border: 1px solid #ccc;
    display: flex; /* Use Flexbox */
    flex-wrap: wrap; /* Allow wrapping of pieces into rows */
    gap: 10px; /* Space between pieces */
    padding: 1vw;
    overflow: hidden; /* Prevent overflow */
    justify-content: center; /* Center pieces inside the container */
    align-items: center; /* Align items vertically */
}

.puzzle-piece {
    width: 100px; /* Fixed width for each piece */
    height: 100px; /* Fixed height for each piece */
    flex-grow: 1; /* Allow pieces to grow and take available space */
    display: inline-block; /* Ensure pieces are inline */
    max-width: 100%; /* Ensure pieces do not overflow horizontally */
    max-height: 100%; /* Ensure pieces do not overflow vertically */
    object-fit: contain; /* Ensure image fits within the dimensions */
}


.pieces-container img {
    width: 100px;
    height: 100px; /* Fix the height of each piece */
}

.grid-cell {
    /*border: 1px solid #000;*/
    box-sizing: border-box;
    width: 100%;
    height: 100%;
    position: relative; /* Make the grid cells relative */
}

.grid-cell img {
    width: 100%;  /* Ensure the piece fits inside the cell */
    height: 100%; /* Ensure the piece fits inside the cell */
    object-fit: cover; /* Maintain the aspect ratio */
    opacity: 1;
    position: absolute; /* Absolute positioning inside the grid cell */
}

.success-modal {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: white;
    padding: 20px;
    border: 1px solid #ccc;
    border-radius: 8px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
    text-align: center;
    z-index: 1000;
  }

  .success-modal button {
    margin: 10px;
    padding: 10px 20px;
    font-size: 16px;
    cursor: pointer;
    border-radius: 4px;
  }

  .ok-button {
    background-color: #4CAF50;
    color: white;
  }

  .redirect-button {
    background-color: #008CBA;
    color: white;
  }
